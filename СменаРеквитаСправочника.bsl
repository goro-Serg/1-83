                            ////////////////////////////////////////////////////////////////////////////////
// МОДУЛЬ ФОРМЫ ВНЕШНЕЙ ОБРАБОТКИ
// Реквизиты формы: Данные (ТаблицаЗначений: Код, СтароеЗначение, НовоеЗначение, Статус),
//                  ВыбранныйСправочник (Строка), ВыбранныйРеквизит (Строка)

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ПустаяСтрока(ВыбранныйСправочник) Тогда ВыбранныйСправочник = "Номенклатура"; КонецЕсли;
	Если ПустаяСтрока(ВыбранныйРеквизит) Тогда ВыбранныйРеквизит = "Наименование"; КонецЕсли;
	Если Данные <> Неопределено Тогда Данные.Очистить(); КонецЕсли;
КонецПроцедуры

// ======================= Выбор справочника / реквизита ======================

&НаКлиенте
Процедура КомандаВыбратьСправочник(Команда)
       Список = ПолучитьСписокСправочников();

       Выбор = ВыборИзСписка(Список, ВыбранныйСправочник, "Выберите справочник");
       Если Выбор = Неопределено Тогда
               Возврат;
       КонецЕсли;

       ПослеВыбораСправочника(Выбор, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСправочника(Результат, ДопПарам) Экспорт
	Если Результат = Неопределено Тогда Возврат; КонецЕсли;
	ИмяСпр = СокрЛП(СокрП(Результат));
	Если ПустаяСтрока(ИмяСпр) Тогда Предупреждение("Имя справочника пустое."); Возврат; КонецЕсли;

	Если Не СправочникСуществует(ИмяСпр) Тогда
		Предупреждение("Справочник """ + ИмяСпр + """ не найден.");
		Возврат;
	КонецЕсли;

	ВыбранныйСправочник = ИмяСпр;
	ВыбранныйРеквизит = "Наименование";
	Если Данные <> Неопределено Тогда Данные.Очистить(); КонецЕсли;
	Сообщить("Выбран: " + ВыбранныйСправочник);
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбратьРеквизит(Команда)
	Если ПустаяСтрока(ВыбранныйСправочник) Тогда
		Предупреждение("Сначала выберите справочник.");
		Возврат;
	КонецЕсли;

	Значение = ВыбранныйРеквизит;
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ПослеВыбораРеквизита", ЭтотОбъект),
		Значение, "Имя строкового реквизита (напр.: Наименование)", , Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораРеквизита(Результат, ДопПарам) Экспорт
	Если Результат = Неопределено Тогда Возврат; КонецЕсли;
	ИмяРекв = СокрЛП(СокрП(Результат));
	Если ПустаяСтрока(ИмяРекв) Тогда Предупреждение("Имя реквизита пустое."); Возврат; КонецЕсли;

	Если Не РеквизитДопустим(ВыбранныйСправочник, ИмяРекв) Тогда
		Предупреждение("Реквизит """ + ИмяРекв + """ не найден или не строковый.");
		Возврат;
	КонецЕсли;

	ВыбранныйРеквизит = ИмяРекв;
	Сообщить("Выбран реквизит: " + ВыбранныйРеквизит);
КонецПроцедуры

// ============================ Вставка из Excel ==============================

&НаКлиенте
Процедура КомандаВставитьИзБуфера(Команда)
	Если ПустаяСтрока(ВыбранныйСправочник) Или ПустаяСтрока(ВыбранныйРеквизит) Тогда
		Предупреждение("Выберите справочник и реквизит.");
		Возврат;
	КонецЕсли;

	Текст = "";
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ПослеВставки", ЭтотОбъект),
		Текст, "Вставьте 2 колонки: Код и Новое значение (" + ВыбранныйРеквизит + ")", , Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВставки(Результат, ДопПарам) Экспорт
	Если Результат = Неопределено Тогда Возврат; КонецЕсли;

	Текст = СтрЗаменить(Результат, Символы.ВК, "");
	Если ПустаяСтрока(Текст) Тогда Предупреждение("Текст пуст."); Возврат; КонецЕсли;

	Добавлено = 0;
	Строки = СтрРазделить(Текст, Символы.ПС, Истина);

	Для Каждого Исх Из Строки Цикл
		Если ПустаяСтрока(Исх) Тогда Продолжить; КонецЕсли;

		Кол = РазделитьСтроку(Исх);
		Если Кол.Количество() < 2 Тогда Продолжить; КонецЕсли;

		Зн0 = ОчиститьЯчейку(Кол[0]);
		Зн1 = ОчиститьЯчейку(Кол[1]);

		Если ЭтоЗаголовок(Зн0) Или ЭтоЗаголовок(Зн1) Тогда Продолжить; КонецЕсли;

		КодЗнач  = Зн0;
		НовЗнач  = Зн1;

		Если СтрДлина(КодЗнач) > 40 И СтрДлина(НовЗнач) <= 40 Тогда
			Врем = КодЗнач; КодЗнач = НовЗнач; НовЗнач = Врем;
		КонецЕсли;

		Если ПустаяСтрока(КодЗнач) Тогда Продолжить; КонецЕсли;

		Новая = Данные.Добавить();
		Новая.Код = КодЗнач;
		Новая.НовоеЗначение = НовЗнач;
		Новая.СтароеЗначение = "";
		Новая.Статус = "";

		Добавлено = Добавлено + 1;
	КонецЦикла;

	Сообщить("Добавлено строк: " + Добавлено);
КонецПроцедуры

&НаКлиенте
Функция РазделитьСтроку(Строка)
	Кол = СтрРазделить(Строка, Символ(9), Истина); // TAB
	Если Кол.Количество() > 1 Тогда Возврат Кол; КонецЕсли;

	Кол = СтрРазделить(Строка, ";", Истина);
	Если Кол.Количество() > 1 Тогда Возврат Кол; КонецЕсли;

	Кол = СтрРазделить(Строка, ",", Истина);
	Если Кол.Количество() > 1 Тогда Возврат Кол; КонецЕсли;

	Кол = Новый Массив; Кол.Добавить(СокрЛП(СокрП(Строка)));
	Возврат Кол;
КонецФункции

&НаКлиенте
Процедура ОчиститьТаблицу()
	// Очищаем строки без пересоздания таблицы
	Попытка
		Данные.Очистить();
	Исключение
		// Реквизит "Данные" не инициализирован.
		Предупреждение("Реквизит 'Данные' не инициализирован. В форме задайте ему начальное значение – пустую таблицу с нужными колонками.");
		Возврат;
	КонецПопытки;

	// Обновим отображение таблицы на форме (если имя элемента другое — подставь своё)
	Попытка Элементы.Данные.Обновить(); Исключение КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОчистить(Команда)
	ОчиститьТаблицу();
	Сообщить("Таблица очищена.");
КонецПроцедуры

&НаКлиенте
Функция ОчиститьЯчейку(Зн)
        Если Зн = Неопределено Тогда Возврат ""; КонецЕсли;
        Т = "" + Зн; // к строке
        Если СтрДлина(Т) >= 2 И Лев(Т,1) = Символ(34) И Прав(Т,1) = Символ(34) Тогда
                Т = Сред(Т, 2, СтрДлина(Т) - 2); // снять внешние кавычки
        КонецЕсли;
        Возврат СокрЛП(СокрП(Т));
КонецФункции

&НаКлиенте
Функция ЭтоЗаголовок(ТекстЗнач)
	ВР = ВРег(ТекстЗнач);
	Если ВР = "КОД" Или ВР = "АРТИКУЛ" Тогда Возврат Истина; КонецЕсли;
	Если ВР = ВРег(ВыбранныйРеквизит) Тогда Возврат Истина; КонецЕсли;
	Возврат Ложь;
КонецФункции
// ============================= Проверка/Запись ==============================

&НаКлиенте
Процедура КомандаПроверить(Команда)
	Если Данные.Количество() = 0 Тогда Предупреждение("Нет данных."); Возврат; КонецЕсли;
	Если ПустаяСтрока(ВыбранныйСправочник) Или ПустаяСтрока(ВыбранныйРеквизит) Тогда
		Предупреждение("Выберите справочник и реквизит.");
		Возврат;
	КонецЕсли;

	Сообщить(ПроверитьНаСервере(ВыбранныйСправочник, ВыбранныйРеквизит));
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаменить(Команда)
	Если Данные.Количество() = 0 Тогда Предупреждение("Нет данных."); Возврат; КонецЕсли;

	Итог = ПрименитьНаСервере(ВыбранныйСправочник, ВыбранныйРеквизит);
	Сообщить("Изменено: " + Итог.Изменено + ", пропущено: " + Итог.Пропущено + ", не найдены: " + Итог.НеНайдены);
	Если Итог.Ошибки.Количество() > 0 Тогда
		Т = "";
		Для Каждого О Из Итог.Ошибки Цикл Т = Т + О + Символы.ПС; КонецЦикла;
		Предупреждение("Ошибки:" + Символы.ПС + Т);
	КонецЕсли;

	ПроверитьНаСервере(ВыбранныйСправочник, ВыбранныйРеквизит);
КонецПроцедуры

// ================================ СЕРВЕР ====================================

&НаСервереБезКонтекста
Функция ПолучитьСписокСправочников() Экспорт
        Список = Новый СписокЗначений;
        Для каждого Спр Из Метаданные.Справочники Цикл
                Список.Добавить(Спр.Имя, Спр.Синоним);
        КонецЦикла;
        Возврат Список;
КонецФункции

&НаСервереБезКонтекста
Функция СправочникСуществует(ИмяСпр) Экспорт
	Попытка
		Возврат Метаданные.Справочники.Найти(ИмяСпр) <> Неопределено;
	Исключение
		Возврат Ложь;
	КонецПопытки;
КонецФункции

&НаСервереБезКонтекста
Функция РеквизитДопустим(ИмяСпр, ИмяРекв) Экспорт
	Если ВРег(ИмяРекв) = "КОД" Тогда Возврат Ложь; КонецЕсли; // по коду ищем — не меняем
	Если ВРег(ИмяРекв) = "НАИМЕНОВАНИЕ" Тогда Возврат Истина; КонецЕсли;

	МД = Метаданные.Справочники.Найти(ИмяСпр);
	Если МД = Неопределено Тогда Возврат Ложь; КонецЕсли;

	РекМД = МД.Реквизиты.Найти(ИмяРекв);
	Если РекМД = Неопределено Тогда Возврат Ложь; КонецЕсли;

	ТипРек = РекМД.Тип;
	Возврат ТипРек.СодержитТип(Тип("Строка"));
КонецФункции

&НаСервереБезКонтекста
Функция НайтиСсылкуПоКоду(ИмяСпр, КодСтрокой) Экспорт
	Если ПустаяСтрока(КодСтрокой) Тогда Возврат Неопределено; КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Спр.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник." + ИмяСпр + " КАК Спр
	|ГДЕ
	|	Спр.ПометкаУдаления = ЛОЖЬ
	|	И Спр.Код = &Код";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Код", КодСтрокой);

	В = Запрос.Выполнить().Выбрать();
	Если В.Следующий() Тогда Возврат В.Ссылка; Иначе Возврат Неопределено; КонецЕсли;
КонецФункции

&НаСервере
Функция ПроверитьНаСервере(ИмяСпр, ИмяРекв) Экспорт
	Если Не СправочникСуществует(ИмяСпр) Тогда Возврат "Справочник не найден."; КонецЕсли;
	Если Не РеквизитДопустим(ИмяСпр, ИмяРекв) Тогда Возврат "Реквизит недопустим."; КонецЕсли;

	Для Каждого Стр Из Данные Цикл
		Стр.СтароеЗначение = "";
		Стр.Статус = "";

		Код = СокрЛП(СокрП(Стр.Код));
		Нов = СокрЛП(СокрП(Стр.НовоеЗначение));

		Сс = НайтиСсылкуПоКоду(ИмяСпр, Код);
		Если Сс = Неопределено И Не ПустаяСтрока(Нов) Тогда
			Сс = НайтиСсылкуПоКоду(ИмяСпр, Нов);
			Если Сс <> Неопределено Тогда
				Стр.Код = Нов;
				Стр.НовоеЗначение = Код;
				Код = Стр.Код; Нов = Стр.НовоеЗначение;
			КонецЕсли;
		КонецЕсли;

		Если Сс = Неопределено Тогда
			Стр.Статус = "Не найден";
			Продолжить;
		КонецЕсли;

		Старое = ПолучитьСтароеЗначение(ИмяСпр, Сс, ИмяРекв);
		Если Старое = Неопределено Тогда
			Стр.Статус = "Ошибка чтения";
			Продолжить;
		КонецЕсли;

		Стр.СтароеЗначение = "" + Старое;

		Если ПустаяСтрока(Нов) Тогда
			Стр.Статус = "Нет нового значения";
		ИначеЕсли ("" + Старое) = Нов Тогда
			Стр.Статус = "Совпадает";
		Иначе
			Стр.Статус = "ОК";
		КонецЕсли;
	КонецЦикла;

	Возврат "Проверка выполнена.";
КонецФункции

&НаСервере
Функция ПрименитьНаСервере(ИмяСпр, ИмяРекв) Экспорт
	Рез = Новый Структура("Изменено,Пропущено,НеНайдены,Ошибки", 0, 0, 0, Новый Массив);

	Если Не СправочникСуществует(ИмяСпр) Тогда
		Рез.Ошибки.Добавить("Справочник не найден.");
		Возврат Рез;
	КонецЕсли;
	Если Не РеквизитДопустим(ИмяСпр, ИмяРекв) Тогда
		Рез.Ошибки.Добавить("Реквизит недопустим.");
		Возврат Рез;
	КонецЕсли;

	НачатьТранзакцию();
	Попытка
		Для Каждого Стр Из Данные Цикл
			Если Стр.Статус <> "ОК" Тогда
				Если Стр.Статус = "Не найден" Тогда
					Рез.НеНайдены = Рез.НеНайдены + 1;
				Иначе
					Рез.Пропущено = Рез.Пропущено + 1;
				КонецЕсли;
				Продолжить;
			КонецЕсли;

			Код = СокрЛП(СокрП(Стр.Код));
			Нов = СокрЛП(СокрП(Стр.НовоеЗначение));
			Если ПустаяСтрока(Код) Или ПустаяСтрока(Нов) Тогда
				Рез.Пропущено = Рез.Пропущено + 1;
				Продолжить;
			КонецЕсли;

			Сс = НайтиСсылкуПоКоду(ИмяСпр, Код);
			Если Сс = Неопределено Тогда
				Рез.НеНайдены = Рез.НеНайдены + 1;
				Продолжить;
			КонецЕсли;

			Попытка
				ОбъектСпр = Сс.ПолучитьОбъект();                 // <<< ИМЯ ИЗМЕНЕНО
				УстановитьЗначениеРеквизита(ОбъектСпр, ИмяРекв, Нов);
				ОбъектСпр.Записать();
				Рез.Изменено = Рез.Изменено + 1;
			Исключение
				Рез.Ошибки.Добавить("Код " + Код + ": " + ОписаниеОшибки());
				Рез.Пропущено = Рез.Пропущено + 1;
			КонецПопытки;
		КонецЦикла;

		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		Рез.Ошибки.Добавить("Ошибка транзакции: " + ОписаниеОшибки());
	КонецПопытки;

	Возврат Рез;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтароеЗначение(ИмяСпр, Ссылка, ИмяРекв) Экспорт
	Попытка
		Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Спр." + ИмяРекв + " КАК Значение
		|ИЗ
		|	Справочник." + ИмяСпр + " КАК Спр
		|ГДЕ
		|	Спр.Ссылка = &Ссылка";

		Запрос = Новый Запрос(Текст);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		В = Запрос.Выполнить().Выбрать();
		Если В.Следующий() Тогда
			Возврат В.Значение;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьЗначениеРеквизита(ОбъектСпр, ИмяРекв, Новое) Экспорт   // <<< ИМЯ ПАРАМЕТРА
	Если ВРег(ИмяРекв) = "НАИМЕНОВАНИЕ" Тогда
		ОбъектСпр.Наименование = Новое;
	Иначе
		ОбъектСпр[ИмяРекв] = Новое;
	КонецЕсли;
КонецПроцедуры

